name: Build on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: ilammy/msvc-dev-cmd@v1

    - uses: seanmiddleditch/gha-setup-ninja@master

    # DEBUG:
    - run: clang --version
    - run: clang-cl --version

    - name: Install dependencies
      run: choco install pkgconfiglite

    - name: Cache vcpkg packages
      id: cache-vcpkg
      uses: actions/cache@v4
      with:
        path: |
          vcpkg_installed_static
          vcpkg_installed_shared
          vcpkg/buildtrees
          vcpkg/packages
          vcpkg/vcpkg.exe
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', 'triplets/**', '.gitmodules') }}

    # DEBUG:
    - run: dir

    - name: Setup vcpkg
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      run: |
        set VCPKG_INSTALLED_PATH=D:\orge\vcpkg_installed
        vcpkg\bootstrap-vcpkg.bat
        vcpkg\vcpkg install --overlay-triplets=.\triplets --triplet=custom-x64-windows-static
        vcpkg\vcpkg install --overlay-triplets=.\triplets --triplet=custom-x64-windows-shared

    - name: Build & install orge (static)
      run: |
        set CC=clang
        set CXX=clang++
        set PKG_CONFIG_PATH=D:\orge\vcpkg_installed\custom-x64-windows-static\lib\pkgconfig
        pipx run meson setup build-static -Dbuildtype=release --prefix=D:\orge\installed-static
        pipx run meson install -C build-static

    - name: Build & install orge (shared)
      run: |
        set CC=clang-cl
        set CXX=clang-cl
        set PKG_CONFIG_PATH=D:\orge\vcpkg_installed\custom-x64-windows-shared\lib\pkgconfig
        pipx run meson setup build-shared -Dbuildtype=release -Ddefault_library=shared --prefix=D:\orge\installed-shared
        pipx run meson install -C build-shared

    - name: Copy example file
      run: copy examples\simple\main.cpp D:\orge\

    - name: Upload orge artifacts
      uses: actions/upload-artifact@v4
      with:
        name: orge-lib
        path: D:\orge

  test-standalone:
    runs-on: windows-latest
    needs: build
    steps:
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies
      run: choco install pkgconfiglite

    - name: Download orge artifacts
      uses: actions/download-artifact@v4
      with:
        name: orge-lib
        path: D:\orge

    - name: Prepare
      run: |
        mkdir shared
        mkdir static

    - name: Test build with shared
      working-directory: shared
      shell: cmd
      env:
        PKG_CONFIG_PATH: D:\orge\lib\pkgconfig
      run: |
        for /f "delims=" %%i in ('pkg-config orge --cflags') do set CFLAGS=%%i
        for /f "delims=" %%j in ('pkg-config orge --libs') do set LIBS=%%j
        cl %CFLAGS% D:\orge\main.cpp /link %LIBS%

    - name: Test build with static
      working-directory: static
      shell: cmd
      env:
        PKG_CONFIG_PATH: D:\orge\lib\pkgconfig
      run: |
        for /f "delims=" %%i in ('pkg-config orgestatic --cflags') do set CFLAGS=%%i
        for /f "delims=" %%j in ('pkg-config orgestatic --libs --static') do set LIBS=%%j
        cl %CFLAGS% D:\orge\main.cpp /link %LIBS%
