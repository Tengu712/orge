name: Build on Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libx11-dev \
          libxcb1-dev \
          libxkbcommon-dev \
          libwayland-dev \
          libxrandr-dev \
          pkg-config

    - name: Cache thirdparty build
      id: cache-thirdparty
      uses: actions/cache@v3
      with:
        path: build/deps
        key: ${{ runner.os }}-thirdparty-${{ hashFiles('thirdparty/setup.sh', '.gitmodules') }}
        restore-keys: |
          ${{ runner.os }}-thirdparty-

    - name: Setup thirdparty libraries
      if: steps.cache-thirdparty.outputs.cache-hit != 'true'
      run: |
        cd thirdparty
        ./setup.sh

    - name: Build orge
      run: |
        cmake -G Ninja -S . -B build -D CMAKE_BUILD_TYPE=Release -D BUILD_EXAMPLES=ON
        cmake --build build

    - name: Install orge
      run: cmake --install build --prefix install

    - name: Upload orge artifacts
      uses: actions/upload-artifact@v4
      with:
        name: orge-lib
        path: install

  test-standalone:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Download orge artifacts
      uses: actions/download-artifact@v4
      with:
        name: orge-lib

    - name: Test standalone build
      run: g++ -std=c++20 -I./install/include ./examples/simple/main.cpp -L./install/build -lorge -o simple
