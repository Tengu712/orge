cmake_minimum_required(VERSION 3.20)
project(orge VERSION 0.1.0)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(ORGE_STATIC "Build static library" OFF)
option(ORGE_SHARED "Build shared library" ON)
if(NOT ORGE_STATIC AND NOT ORGE_SHARED)
	message(FATAL_ERROR "Either ORGE_STATIC or ORGE_SHARED must be ON.")
endif()

list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build/deps/Vulkan-Headers)
list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build/deps/Vulkan-Loader)
list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build/deps/SDL)
list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build/deps/yaml-cpp)
find_package(PkgConfig REQUIRED)
find_package(VulkanHeaders CONFIG REQUIRED)
find_package(VulkanLoader CONFIG REQUIRED)
find_package(SDL3 CONFIG REQUIRED)
find_package(yaml-cpp CONFIG REQUIRED)

include(GNUInstallDirs)

if(MSVC)
	include(cmake/build-msvc.cmake)
elseif(APPLE)
	include(cmake/build-macos.cmake)
elseif(LINUX)
	# include(cmake/build-linux.cmake)
else()
	message(FATAL_ERROR "")
endif()

add_subdirectory(examples)
